version: '3.3'

services:

  demo_app:
    build:
      context: app
    depends_on:
      - fluentbit
      - jaeger

  fluentbit:
    image: fluent/fluent-bit:latest
    volumes:
      - ./fluentbit/fluent.conf:/fluent-bit/etc/fluent-bit.conf
    restart: always
    depends_on:
      jaeger:
        condition: service_started
      prometheus:
        condition: service_started
      collector:
        condition: service_started

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/datasources/:/etc/grafana/provisioning/datasources/
      - ./grafana/dashboards/:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboard-files/:/docker-compose/dashboards/
    restart: always

  loki:
    image: grafana/loki:2.8.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  jaeger:
    image: jaegertracing/all-in-one:1.35
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"

  collector:
    image: otel/opentelemetry-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./collector/logs.yaml:/etc/otel-collector-config.yaml

volumes:
  prometheus-data:
  grafana-storage:
